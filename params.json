{
  "name": "SugarCRM API SDK",
  "tagline": "Making use of the SugarCRM REST v10 API look so easy",
  "body": "#SugarCRM REST API SDK#\r\n\r\n##Overview##\r\nA simple and intuitive Library for accessing a Sugar 7's REST v10 API. Allows for Object Oriented design around accessing data from a SugarCRM system, so you can easily get your integration project underway.\r\n\r\n##Usage##\r\n###Composer###\r\nYou can easily add the Library to a project, by adding the Package to your composer.json file.\r\n<pre>\r\n    \"require\": {\r\n        \"michaelj2324/sugarcrm-restv10-sdk\": '>=0.5'\r\n    },\r\n</pre>\r\nOtherwise you can pull down the package using composer\r\n<pre>composer require michaelj2324/sugarcrm-restv10-sdk</pre>\r\n\r\n###Code###\r\n<pre>\r\n  $instance = 'localhost/sugarcrm/';\r\n  $authOptions = array(\r\n            'username' => 'user',\r\n            'password' => 'pass'\r\n  );\r\n  $id = '1234a';\r\n  $SugarAPI = new \\SugarAPI\\SDK\\SugarAPI($instance,$authOptions);\r\n  $SugarAPI->login();\r\n  $record = $SugarAPI->getRecord('Accounts',$id)->execute()->getResponse()->getBody();\r\n  echo $record->id;\r\n</pre>\r\nSee examples directory for a few examples of manipulating data via the API.\r\n\r\n##Current API Methods Included##\r\n- \\<module\\> - POST\r\n - Create Module Records\r\n- \\<module\\>/filter - POST\r\n - List Module Records, and Filter Records using the Filter API\r\n- \\<module\\>/:record - GET\r\n - Get Module Record\r\n- \\<module\\>/:record - PUT\r\n - Update Module Record\r\n- \\<module\\>/:record/favorite - PUT\r\n - Favorite a Module Record\r\n- oauth2/token - POST\r\n - Login, and Refresh Token\r\n\r\n##Customizable##\r\nAdding API EntryPoints to the SDK is easy as well. Since SugarCRM's REST API is customizable, you can easily add in custom entrypoints added to your SugarCRM instance into the SDK, so you do not need to work around utilizing your custom Sugar setup.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}